{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","squares","renderSquare","React","Component","Game","_this2","Object","_media_mtk_94C26753C267389E_Projects_Forfun_web_tic_tac_toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_media_mtk_94C26753C267389E_Projects_Forfun_web_tic_tac_toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_media_mtk_94C26753C267389E_Projects_Forfun_web_tic_tac_toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","output","length","array","index","slice","calculateWinner","setState","concat","squares_2","getState","state_value","myData","split","map","parseFloat","max_val","maxIndex","updateValues","step","status","_this3","current","winner","moves","move","desc","key","jumpTo","handleClick","lines","_lines$i","_media_mtk_94C26753C267389E_Projects_Forfun_web_tic_tac_toe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf8eef49.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport myData from './resources/x_player_movies.json';\nimport { stat } from 'fs';\n\n\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n    \n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n            ],\n            stepNumber: 0,\n            xIsNext: false\n        };\n    }\n    getState(squares) {\n        let output = \"\";\n        for (var i = 0; i < squares.length; i++) {\n            if (squares[i] === null || squares[i] === \"\") {\n                output += \"-\";\n            } else {\n                output += squares[i];\n            }\n        }\n        return output;\n    }\n    maxIndex(array) {\n        let index = 0;\n        for (var i = 0; i < array.length; i++){\n            if (array[i] > array[index]) {\n                index = i;\n            }\n        }\n        return index;\n    }\n\n    updateValues(i, value) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = value\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        }, function () {\n                if (value == \"O\") {\n                    const squares_2 = this.state.history[this.state.history.length - 1][\"squares\"];\n                    const state = this.getState(squares_2);\n                    const state_value = myData[state].split(\",\").map(parseFloat);\n                    const max_val = this.maxIndex(state_value);\n                    this.updateValues(max_val, \"X\");\n            }\n        });\n    }\n\n    handleClick(i) {\n        const player_name = \"O\";\n\n        const squares = this.state.history[this.state.history.length - 1];\n \n        this.updateValues(i, player_name)\n        \n        \n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n            status = \"Winner: \" + winner;\n        } else {\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                        xIsNext={this.state.xIsNext}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n"],"sourceRoot":""}